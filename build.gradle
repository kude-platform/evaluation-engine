import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.vaadin' version '24.5.5'
}

group = 'com.example'
version = '0.5.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

springBoot {
    buildInfo()
}

bootJar {
    archiveFileName = "app.jar"
}

vaadin {
    vaadinPrepareFrontend
    vaadinBuildFrontend
}

repositories {
    mavenCentral()
    maven {
        url "https://maven.vaadin.com/vaadin-prereleases/"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.retry:spring-retry'

    implementation 'com.vaadin:vaadin-spring-boot-starter:24.5.4'
    implementation 'io.kubernetes:client-java:22.0.0'

    implementation 'org.bouncycastle:bcpkix-jdk18on:1.78.1'
    implementation 'org.bouncycastle:bcprov-jdk18on:1.78.1'

    implementation 'com.google.code.gson:gson:2.11.0'
    implementation 'org.mapstruct:mapstruct:1.6.0'

    implementation 'org.apache.commons:commons-csv:1.12.0'

    OperatingSystem os = DefaultNativePlatform.currentOperatingSystem;
    def arch = System.getProperty("os.arch")

    implementation 'com.marcnuri.helm-java:helm-java:0.0.14'
    if (os.isMacOsX()) {
        implementation 'com.marcnuri.helm-java:darwin-amd64:0.0.14'
    } else if(arch == "amd64"){
        implementation 'com.marcnuri.helm-java:linux-amd64:0.0.14'
    } else {
        implementation 'com.marcnuri.helm-java:linux-arm64:0.0.14'
    }

    runtimeOnly 'com.h2database:h2'

    compileOnly 'org.projectlombok:lombok:1.18.32'

    annotationProcessor 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "com.vaadin:vaadin-bom:24.5.4"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
